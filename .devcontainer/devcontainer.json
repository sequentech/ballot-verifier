// For format details, see https://aka.ms/vscode-remote/devcontainer.json or the definition README at
// https://github.com/microsoft/vscode-dev-containers/tree/master/containers/docker-existing-dockerfile
{
  "name": "devcontainer-project",
  "dockerFile": "Dockerfile",
  "context": "${localWorkspaceFolder}",
  "build": {
    "args": {
      "USER_UID": "${localEnv:USER_UID}",
      "USER_GID": "${localEnv:USER_GID}"
    },
  },

  // run arguments passed to docker
  "runArgs": [
    "--security-opt", "label=disable"
  ],

  "containerEnv": {
     // extensions to preload before other extensions
    "PRELOAD_EXTENSIONS": "arrterian.nix-env-selector"
  },

   // disable command overriding and updating remote user ID
  "overrideCommand": false,
  "updateRemoteUserUID": false,

  // build development environment on creation, make sure you already have shell.nix
  "onCreateCommand": "nix-shell --command 'echo done building nix dev environment'",

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
	"arrterian.nix-env-selector",
	"fsevenm.run-it-on",
	"jnoortheen.nix-ide",
	"jeff-hykin.better-cpp-syntax",
	"ms-vscode.cpptools",
	"xaver.clang-format",
	"twxs.cmake",
	"ms-vscode.cmake-tools",
	"ms-azuretools.vscode-docker",
	"eamodio.gitlens",
	"bbenoist.nix",
	"stkb.rewrap"
],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "go version",
"mounts": [
    "source=agora-airgap_devcontainer_nix-cache,target=/nix,type=volume",
    "source=agora-airgap_devcontainer_home-cache,target=/home/code/.cache,type=volume"
 ]
}
